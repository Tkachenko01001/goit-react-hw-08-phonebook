{"version":3,"file":"static/js/62.74119297.chunk.js","mappings":"mPAsBA,GApBmBA,EAAAA,EAAAA,IAAO,OAAPA,CAAe,CAChCC,QAAS,OACTC,cAAe,SACfC,MAAO,OACPC,SAAU,QACVC,QAAS,OACTC,OAAQ,iBACRC,aAAc,MACdC,UAAW,8BAEX,OAAQ,CACNC,aAAc,OACdC,UAAW,UAGb,uBAAwB,CACtBD,aAAc,U,sECyElB,EAhFoB,WAClB,OAAwBE,EAAAA,EAAAA,WAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEMC,GAAWC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMF,SAASG,KAA1B,IACvBC,GAAWH,EAAAA,EAAAA,IAAYI,EAAAA,GACvBC,GAAWC,EAAAA,EAAAA,MAEXC,GAAQC,EAAAA,EAAAA,aAAW,SAAeC,EAAOC,GAC7C,OAAO,SAAC,KAAD,QAAUC,UAAW,EAAGD,IAAKA,EAAKE,QAAQ,UAAaH,GAC/D,IAEKI,EAAc,SAACC,EAAOC,GACX,cAAXA,GAIJjB,GAAQ,EACT,EAiBKkB,EAAwB,SAACC,GAC7B,OAAOlB,EAASmB,MACd,SAACC,GAAD,OACEA,EAAQC,KAAKC,gBAAkBJ,EAAWG,KAAKC,aADjD,GAGH,EAED,OACE,UAAC,EAAD,CAAYC,SAvBO,SAACC,GACpBA,EAAEC,iBACF,MAAyBD,EAAEE,OAAOC,SAA1BN,EAAR,EAAQA,KAAMO,EAAd,EAAcA,OACRV,EAAa,CAAEG,KAAMA,EAAKQ,MAAOD,OAAQA,EAAOC,OAElDZ,EAAsBC,GACxBY,MAAM,GAAD,OAAIZ,EAAWG,KAAf,6BAIPf,GAASyB,EAAAA,EAAAA,IAAWb,IACpBnB,GAAQ,GACRyB,EAAEE,OAAOM,QACV,EAUC,WACE,sCACA,SAACC,EAAA,EAAD,CACEC,GAAG,OACHC,MAAM,OACNtB,QAAQ,WACRuB,KAAK,OACLf,KAAK,OACLgB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,KAEV,SAACN,EAAA,EAAD,CACEC,GAAG,SACHC,MAAM,SACNtB,QAAQ,WACRuB,KAAK,MACLf,KAAK,SACLgB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,KAEV,SAACC,EAAA,EAAD,CAAQJ,KAAK,SAASvB,QAAQ,YAA9B,SACGT,EAASqC,WACR,SAACC,EAAA,EAAD,CAAkBC,KAAM,GAAIC,MAAM,YAElC,iBAGJ,SAACC,EAAA,EAAD,CAAU/C,KAAMA,EAAMgD,iBAAkB,IAAMC,QAASjC,EAAvD,UACE,SAACN,EAAD,CAAOuC,QAASjC,EAAakC,SAAS,UAAUC,GAAI,CAAE5D,MAAO,QAA7D,6CAMP,E,UCnED,EAlBsB,WAElB,IAAM6D,GAASjD,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMgD,MAAjB,IACrB5C,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAAC0B,EAAA,EAAD,CACAC,GAAG,iBACHC,MAAM,wBACNtB,QAAQ,WACRuB,KAAK,OACLf,KAAK,SACLQ,MAAOqB,EACPC,SAAU,SAAC3B,GAAD,OAAOlB,GAAS8C,EAAAA,EAAAA,IAAe5B,EAAEE,OAAOG,OAAxC,EACVc,KAAK,SAEV,E,UClBYU,GAAcnE,EAAAA,EAAAA,IAAO,KAAPA,CAAa,CACpCC,QAAS,OACTmE,eAAgB,gBAChBC,WAAY,SACZC,UAAW,MACX7D,aAAc,SCgBlB,EAlB4B,SAAC,GAAoC,IAAlCuC,EAAiC,EAAjCA,GAAIb,EAA6B,EAA7BA,KAAMO,EAAuB,EAAvBA,OAAQ6B,EAAe,EAAfA,SAC/C,OACE,iCACE,UAACJ,EAAD,WACGhC,EADH,KACWO,EADX,IACoB6B,IADFvB,IAGlB,SAACwB,EAAA,EAAD,MAGL,E,UCoDD,EAvDqB,WACnB,IAAM1D,GAAWC,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMF,SAASG,KAA1B,IACvB+C,GAASjD,EAAAA,EAAAA,KAAY,SAACC,GAAD,OAAWA,EAAMgD,MAAjB,IACrBT,GAAYxC,EAAAA,EAAAA,IAAYI,EAAAA,GACxBC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBV,EAAAA,EAAAA,WAAS,GAAjC,eAAOC,EAAP,KAAaC,EAAb,KAEM4D,EAAmB3D,EAASkD,QAAO,SAAC9B,GAAD,OACvCA,EAAQC,KAAKC,cAAcsC,SAASV,EAAO5B,cADJ,IASnCR,EAAc,WAClBf,GAAQ,EACT,EAED,OACE,iCACE,wBACG4D,EAAiBE,KAAI,SAACzC,GAAD,OACpB,SAAC,EAAD,CAEEc,GAAId,EAAQc,GACZb,KAAMD,EAAQC,KACdO,OAAQR,EAAQQ,OAJlB,UAME,SAACY,EAAA,EAAD,CACE3B,QAAQ,WACR+B,MAAM,QACND,KAAK,QACLmB,WAAW,SAACC,EAAA,EAAD,IACXC,QAAS,kBAxBA9B,EAwBkBd,EAAQc,GAvB7C5B,GAAS2D,EAAAA,EAAAA,IAAc/B,SACvBnC,GAAQ,GAFU,IAACmC,CAwBA,EALX,SAOGO,EAAUA,WACT,SAACC,EAAA,EAAD,CAAkBC,KAAM,GAAIC,MAAM,YAElC,YAfCxB,EAAQc,GAFK,OAuBxB,SAACW,EAAA,EAAD,CAAU/C,KAAMA,EAAMgD,iBAAkB,IAAMC,QAASjC,EAAvD,UACE,SAAC,IAAD,CAAUiC,QAASjC,EAAakC,SAAS,UAAUC,GAAI,CAAE5D,MAAO,QAAhE,+CAMP,E,8BCFD,EAtDiB,WACf,IAAMiB,GAAWC,EAAAA,EAAAA,MAMjB,OAJA2D,EAAAA,EAAAA,YAAU,WACR5D,GAAS6D,EAAAA,EAAAA,MACV,GAAE,CAAC7D,KAGF,UAAC8D,EAAA,EAAD,CAAKxE,UAAU,OAAf,WACE,uCACA,UAACyE,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,GAAzB,WACE,SAACF,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,UACE,SAACC,EAAA,EAAD,CAAOC,UAAU,OAAOC,IAAI,EAAMC,cAAY,EAACC,eAAa,EAA5D,UACE,0BACE,SAAC,EAAD,WAIN,SAACT,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,EAAf,UACE,SAACL,EAAA,EAAD,CACEnB,GAAI,CACF1D,QAAS,OACTF,MAAO,OACP0F,OAAQ,QACRC,UAAW,OACX1F,SAAU,QACVE,OAAQ,iBACRC,aAAc,MACdC,UAAW,8BACX,uBAAwB,CACtBL,MAAO,OAET,6BAA8B,CAC5B4F,gBAAiB,OACjBxF,aAAc,OAEhB,mCAAoC,CAClCwF,gBAAiB,SAlBvB,UAsBE,SAACP,EAAA,EAAD,CAAOC,UAAU,OAAOC,IAAI,EAAMC,cAAY,EAACC,eAAa,EAA5D,UACE,4BACE,SAAC,EAAD,KACA,SAAC,EAAD,kBAQf,C","sources":["styled/Contact-form.styled.jsx","components/Contact-form/Contact-form.jsx","components/Contact-filter/Contact-filter.jsx","styled/List-element.styled.jsx","components/Contact-list-element/Contacts-list-element.jsx","components/Contact-list/Contacts-list.jsx","pages/Contacts.jsx"],"sourcesContent":["import { styled } from '@mui/material/styles';\n\nconst StyledForm = styled('form')({\n  display: 'flex',\n  flexDirection: 'column',\n  width: '100%',\n  maxWidth: '350px',\n  padding: '20px',\n  border: '1px solid #ccc',\n  borderRadius: '4px',\n  boxShadow: '0 2px 4px rgba(0, 0, 0, .3)',\n\n  '& h2': {\n    marginBottom: '20px',\n    textAlign: 'center',\n  },\n\n  '& .MuiTextField-root': {\n    marginBottom: '20px',\n  },\n});\n\nexport default StyledForm;\n","import React, { useState, forwardRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'Redux/operations/operations';\nimport StyledForm from '../../styled/Contact-form.styled';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport TextField from '@mui/material/TextField';\nimport Snackbar from '@mui/material/Snackbar';\nimport MuiAlert from '@mui/material/Alert';\nimport { getTasks } from 'Redux/selectors/getTasks';\n\nconst ContactForm = () => {\n  const [open, setOpen] = useState(false);\n\n  const contacts = useSelector((state) => state.contacts.items);\n  const userData = useSelector(getTasks);\n  const dispatch = useDispatch();\n\n  const Alert = forwardRef(function Alert(props, ref) {\n    return <MuiAlert elevation={6} ref={ref} variant=\"filled\" {...props} />;\n  });\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = e.target.elements;\n    const newContact = { name: name.value, number: number.value };\n\n    if (checkDuplicateContact(newContact)) {\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact(newContact));\n    setOpen(true);\n    e.target.reset();\n  };\n\n  const checkDuplicateContact = (newContact) => {\n    return contacts.some(\n      (contact) =>\n        contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n  };\n\n  return (\n    <StyledForm onSubmit={handleSubmit}>\n      <h2>Contacts</h2>\n      <TextField\n        id=\"name\"\n        label=\"Name\"\n        variant=\"outlined\"\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <TextField\n        id=\"number\"\n        label=\"Number\"\n        variant=\"outlined\"\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <Button type=\"submit\" variant=\"contained\">\n        {userData.isLoading ? (\n          <CircularProgress size={25} color=\"inherit\" />\n        ) : (\n          'Add contact'\n        )}\n      </Button>\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\n        <Alert onClose={handleClose} severity=\"success\" sx={{ width: '100%' }}>\n          Contact added successfully!\n        </Alert>\n      </Snackbar>\n    </StyledForm>\n  );\n};\n\nexport default ContactForm;","import { useDispatch, useSelector } from \"react-redux\";\nimport { filterContacts } from \"Redux/Slices/Slices\";\nimport TextField from '@mui/material/TextField';\n\nconst ContactFilter = () => {\n\n    const filter = useSelector((state) => state.filter);\n    const dispatch = useDispatch();\n\n    return ( \n      <TextField \n      id=\"outlined-basic\" \n      label=\"find contacts by name\" \n      variant=\"outlined\" \n      type=\"text\"\n      name=\"filter\"\n      value={filter}\n      onChange={(e) => dispatch(filterContacts(e.target.value))}\n      size=\"small\" />\n    )\n}\n\nexport default ContactFilter;","import { styled } from '@mui/material/styles';\n\nexport const ListElement = styled('li')({\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginTop: '5px',\n    marginBottom: '10px',\n})","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Divider from \"@mui/material/Divider\";\nimport { ListElement } from \"styled/List-element.styled\";\n\nconst ContactsListElement = ({ id, name, number, children }) => {\n  return (\n    <>\n      <ListElement key={id}>\n        {name}: {number} {children}\n      </ListElement>\n      <Divider />\n    </>\n  );\n};\n\nContactsListElement.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default ContactsListElement;","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { deleteContact } from \"../../Redux/operations/operations\";\nimport ContactsListElement from \"../Contact-list-element/Contacts-list-element\";\nimport { getTasks } from \"Redux/selectors/getTasks\";\nimport Button from \"@mui/material/Button\";\nimport DeleteIcon from \"@mui/icons-material/Delete\";\nimport CircularProgress from \"@mui/material/CircularProgress\";\nimport Snackbar from \"@mui/material/Snackbar\";\nimport MuiAlert from \"@mui/material/Alert\";\n\nconst ContactsList = () => {\n  const contacts = useSelector((state) => state.contacts.items);\n  const filter = useSelector((state) => state.filter);\n  const isLoading = useSelector(getTasks);\n  const dispatch = useDispatch();\n  const [open, setOpen] = useState(false);\n\n  const filteredContacts = contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  const handleClick = (id) => {\n    dispatch(deleteContact(id));\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <ul>\n        {filteredContacts.map((contact) => (\n          <ContactsListElement\n            key={contact.id}\n            id={contact.id}\n            name={contact.name}\n            number={contact.number}\n          >\n            <Button\n              variant=\"outlined\"\n              color=\"error\"\n              size=\"small\"\n              startIcon={<DeleteIcon />}\n              onClick={() => handleClick(contact.id)}\n            >\n              {isLoading.isLoading ? (\n                <CircularProgress size={15} color=\"inherit\" />\n              ) : (\n                \"delete\"\n              )}\n            </Button>\n          </ContactsListElement>\n        ))}\n      </ul>\n      <Snackbar open={open} autoHideDuration={3000} onClose={handleClose}>\n        <MuiAlert onClose={handleClose} severity=\"success\" sx={{ width: \"100%\" }}>\n          Contact deleted successfully!\n        </MuiAlert>\n      </Snackbar>\n    </>\n  );\n};\n\nexport default ContactsList;","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchContacts } from \"Redux/operations/operations\";\nimport ContactForm from \"../components/Contact-form/Contact-form\";\nimport ContactFilter from \"../components/Contact-filter/Contact-filter\";\nimport ContactsList from \"../components/Contact-list/Contacts-list\";\nimport { Box, Slide, Grid } from \"@mui/material\";\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box textAlign=\"left\">\n      <h1>Phonebook</h1>\n      <Grid container spacing={15}>\n        <Grid item xs={6}>\n          <Slide direction=\"down\" in={true} mountOnEnter unmountOnExit>\n            <div>\n              <ContactForm />\n            </div>\n          </Slide>\n        </Grid>\n        <Grid item xs={6}>\n          <Box\n            sx={{\n              padding: \"20px\",\n              width: \"100%\",\n              height: \"257px\",\n              overflowY: \"auto\",\n              maxWidth: \"350px\",\n              border: \"1px solid #ccc\",\n              borderRadius: \"4px\",\n              boxShadow: \"0 2px 4px rgba(0, 0, 0, .3)\",\n              \"&::-webkit-scrollbar\": {\n                width: \"8px\",\n              },\n              \"&::-webkit-scrollbar-thumb\": {\n                backgroundColor: \"#ccc\",\n                borderRadius: \"4px\",\n              },\n              \"&::-webkit-scrollbar-thumb:hover\": {\n                backgroundColor: \"#999\",\n              },\n            }}\n          >\n            <Slide direction=\"down\" in={true} mountOnEnter unmountOnExit>\n              <div>\n                <ContactFilter />\n                <ContactsList />\n              </div>\n            </Slide>\n          </Box>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default Contacts;\n"],"names":["styled","display","flexDirection","width","maxWidth","padding","border","borderRadius","boxShadow","marginBottom","textAlign","useState","open","setOpen","contacts","useSelector","state","items","userData","getTasks","dispatch","useDispatch","Alert","forwardRef","props","ref","elevation","variant","handleClose","event","reason","checkDuplicateContact","newContact","some","contact","name","toLowerCase","onSubmit","e","preventDefault","target","elements","number","value","alert","addContact","reset","TextField","id","label","type","pattern","title","required","Button","isLoading","CircularProgress","size","color","Snackbar","autoHideDuration","onClose","severity","sx","filter","onChange","filterContacts","ListElement","justifyContent","alignItems","marginTop","children","Divider","filteredContacts","includes","map","startIcon","Delete","onClick","deleteContact","useEffect","fetchContacts","Box","Grid","container","spacing","item","xs","Slide","direction","in","mountOnEnter","unmountOnExit","height","overflowY","backgroundColor"],"sourceRoot":""}